plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'com.ixnah.app'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}

sourceCompatibility = '21'
targetCompatibility = '21'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.ixnah.app.audiolinker'
    mainClass = 'com.ixnah.app.audiolinker.Bootstrap'
}

javafx {
    version = '21-ea+24'
    modules = ['javafx.controls']
}

dependencies {
    implementation 'io.github.palexdev:materialfx:11.16.1'
    implementation 'ch.qos.logback:logback-classic:1.4.11'
    implementation(platform('com.fasterxml.jackson:jackson-bom:2.15.3'))
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation(platform('io.netty:netty-bom:4.1.100.Final'))
    implementation 'io.netty:netty-buffer'
    implementation 'io.netty:netty-codec'
    implementation 'io.netty:netty-codec-http'
    implementation 'io.netty:netty-common'
    implementation 'io.netty:netty-handler'
    implementation 'net.java.dev.jna:jna-platform:5.13.0'
    implementation 'org.sheinbergon:jna-aac-encoder:0.1.9'

    implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-fontawesome5-pack:12.3.1'

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}